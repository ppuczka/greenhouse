@page "/"
@rendermode InteractiveServer
@attribute [Authorize]

@using Greenhouse.Data.Interfaces
@using Greenhouse.Data.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Syncfusion.Blazor.Layouts
@using Syncfusion.Blazor.CircularGauge
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage SessionStorage

@inject IGreenhouseMetricService GreenhouseMetricService
@inject IMetricChartDataService MetricChartDataService

<PageTitle>Dashboard</PageTitle>
<AuthorizeView>
    <Authorized>
        @if (_latestMetric == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="content">
                <div class="switch" style="display: flex; justify-content: flex-end; margin-bottom: 10px;">
                <SfSwitch @bind-Checked="_toggleMetricsTimeRangeWeekly" OnLabel="week" OffLabel="24h"
                          ValueChange="ChangeTimeInterval" TChecked="bool"></SfSwitch>
                </div>
                <SfDashboardLayout CellSpacing="@(new double[] { 20, 20 })" Columns="3">
                    <DashboardLayoutEvents Created="Created" OnWindowResize="@ResizingWindow"
                                           Resizing="@ResizingWindow"></DashboardLayoutEvents>
                    <DashboardLayoutPanels>
                        <DashboardLayoutPanel Row="0">
                            <ContentTemplate>
                                @if (IsInitialRender)
                                {
                                    <SfCircularGauge ID="Temperature"
                                                     Title="Current Temperature"
                                                     @ref="_temperature"
                                                     Background="transparent"
                                                     Height="150%" Width="100%">
                                        <CircularGaugeAxes>
                                            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="10" Maximum="40">
                                                <CircularGaugeRanges>
                                                    <CircularGaugeRange Start=17
                                                                        End=25
                                                                        Color="Green"></CircularGaugeRange>
                                                    <CircularGaugeRange Start=0 End=17></CircularGaugeRange>
                                                    <CircularGaugeRange Start=25 End=40
                                                                        Color="Red"></CircularGaugeRange>
                                                </CircularGaugeRanges>
                                                <CircularGaugePointers>
                                                    <CircularGaugePointer
                                                        Value=@_latestMetric.Temperature></CircularGaugePointer>
                                                </CircularGaugePointers>
                                            </CircularGaugeAxis>
                                        </CircularGaugeAxes>
                                    </SfCircularGauge>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel SizeX=2 Column=2 Row="0">
                            <ContentTemplate>
                                @if (_toggleMetricsTimeRangeWeekly)
                                {
                                    <SfChart Title="Temperature Weekly" Palettes="@_palettes">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                        </ChartPrimaryXAxis>

                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_temperatureWeeklyReport"
                                                         High="30"
                                                         XName="WeekDay"
                                                         YName="High"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                            <ChartSeries DataSource="@_temperatureWeeklyReport"
                                                         XName="WeekDay"
                                                         YName="Low"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                                else
                                {
                                    <SfChart Title="Temperature Daily" Theme="Theme.Fluent2">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_temperatureDailyReport" XName="Hour"
                                                         YName="Value"
                                                         Type="ChartSeriesType.Line">
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel Row="1">
                            <ContentTemplate>
                                @if (IsInitialRender)
                                {
                                    <SfCircularGauge ID="Humidity"
                                                     Title="Current Humidity"
                                                     @ref="_humidity"
                                                     Background="transparent"
                                                     Height="150%"
                                                     Width="100%">
                                        <CircularGaugeAxes>
                                            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="20" Maximum="90">
                                                <CircularGaugeRanges>
                                                    <CircularGaugeRange Start=40 End=60
                                                                        Color="Green"></CircularGaugeRange>
                                                    <CircularGaugeRange Start=60 End=90></CircularGaugeRange>
                                                    <CircularGaugeRange Start=20 End=40
                                                                        Color="Red"></CircularGaugeRange>
                                                </CircularGaugeRanges>
                                                <CircularGaugePointers>
                                                    <CircularGaugePointer
                                                        Value=@_latestMetric.Humidity></CircularGaugePointer>
                                                </CircularGaugePointers>
                                            </CircularGaugeAxis>
                                        </CircularGaugeAxes>
                                    </SfCircularGauge>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel SizeX=2 Column=2 Row="1">
                            <ContentTemplate>
                                @if (_toggleMetricsTimeRangeWeekly)
                                {
                                    <SfChart Title="Air Humidity Weekly" Palettes="@_palettes">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                        </ChartPrimaryXAxis>

                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_airHumidityWeeklyReport"
                                                         XName="WeekDay"
                                                         YName="High"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                            <ChartSeries DataSource="@_airHumidityWeeklyReport"
                                                         XName="WeekDay"
                                                         YName="Low"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                                else
                                {
                                    <SfChart Title="Air Humidity Daily">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_airHumidityDailyReport" XName="Hour"
                                                         YName="Value"
                                                         Type="ChartSeriesType.Line">
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel Row=2>
                            <ContentTemplate>
                                @if (IsInitialRender)
                                {
                                    <SfCircularGauge ID="SoilMoisture"
                                                     @ref="_soilMoisture"
                                                     Title="Current Soil Moisture"
                                                     Background="transparent"
                                                     Height="150%"
                                                     Width="100%">
                                        <CircularGaugeAxes>
                                            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="20" Maximum="90">
                                                <CircularGaugeRanges>
                                                    <CircularGaugeRange Start=40 End=60
                                                                        Color="Green"></CircularGaugeRange>
                                                    <CircularGaugeRange Start=60 End=90></CircularGaugeRange>
                                                    <CircularGaugeRange Start=20 End=40
                                                                        Color="Red"></CircularGaugeRange>
                                                </CircularGaugeRanges>
                                                <CircularGaugePointers>
                                                    <CircularGaugePointer
                                                        Value=@_latestMetric.SoilMoisture></CircularGaugePointer>
                                                </CircularGaugePointers>
                                            </CircularGaugeAxis>
                                        </CircularGaugeAxes>
                                    </SfCircularGauge>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel SizeX=2 Column=2 Row="2">
                            <ContentTemplate>
                                @if (_toggleMetricsTimeRangeWeekly)
                                {
                                    <SfChart Title="Soil Moisture Weekly" Palettes="@_palettes">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                        </ChartPrimaryXAxis>

                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_soilMoistureWeeklyReport"
                                                         XName="WeekDay"
                                                         YName="High"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                            <ChartSeries DataSource="@_soilMoistureWeeklyReport"
                                                         XName="WeekDay"
                                                         YName="Low"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                                else
                                {
                                    <SfChart Title="Soil Moisture Daily" Theme="Theme.Bootstrap5">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_soilMoistureDailyReport" XName="Hour"
                                                         YName="Value"
                                                         Type="ChartSeriesType.Line">
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel Row=3>
                            <ContentTemplate>
                                @if (IsInitialRender)
                                {
                                    <SfCircularGauge ID="LightIntensity"
                                                     @ref="_lightIntensity"
                                                     Title="Current Light Intensity"
                                                     Background="transparent"
                                                     Height="150%"
                                                     Width="100%">
                                        <CircularGaugeAxes>
                                            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="0"
                                                               Maximum="1000">
                                                <CircularGaugeRanges>
                                                    <CircularGaugeRange Start=0 End=300
                                                                        Color="Green"></CircularGaugeRange>
                                                    <CircularGaugeRange Start=300 End=700></CircularGaugeRange>
                                                    <CircularGaugeRange Start=700 End=1000
                                                                        Color="Red"></CircularGaugeRange>
                                                </CircularGaugeRanges>
                                                <CircularGaugePointers>
                                                    <CircularGaugePointer
                                                        Value=@_latestMetric.LightIntensity></CircularGaugePointer>
                                                </CircularGaugePointers>
                                            </CircularGaugeAxis>
                                        </CircularGaugeAxes>
                                    </SfCircularGauge>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>

                        <DashboardLayoutPanel SizeX=2 Column=2 Row="3">
                            <ContentTemplate>
                                @if (_toggleMetricsTimeRangeWeekly)
                                {
                                    <SfChart Title="Light Intensity Weekly" Palettes="@_palettes">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                        </ChartPrimaryXAxis>
                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_lightIntensityWeeklyReport"
                                                         XName="WeekDay"
                                                         YName="High"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                            <ChartSeries DataSource="@_lightIntensityWeeklyReport"
                                                         XName="WeekDay"
                                                         YName="Low"
                                                         Type="ChartSeriesType.Column">
                                                <ChartMarker>
                                                    <ChartDataLabel Visible="true"/>
                                                </ChartMarker>
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                                else
                                {
                                    <SfChart Title="Light Intensity Daily" Theme="Theme.Tailwind3">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"/>
                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@_lightIntensityDailyReport" XName="Hour"
                                                         YName="Value"
                                                         Type="ChartSeriesType.Line">
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                    </DashboardLayoutPanels>
                </SfDashboardLayout>
                <p>Last updated: @_latestMetric.DateTime</p>
            </div>
        }

        @code
        {

            private readonly string[] _palettes = ["#F6B53F", "#6FAAB0"];
            private bool _toggleMetricsTimeRangeWeekly;

            private SfCircularGauge? _temperature;
            private SfCircularGauge? _humidity;
            private SfCircularGauge? _soilMoisture;
            private SfCircularGauge? _lightIntensity;

            private GreenhouseMetric? _latestMetric;

            private List<WeeklyMetricChartData>? _temperatureWeeklyReport;
            private List<WeeklyMetricChartData>? _airHumidityWeeklyReport;
            private List<WeeklyMetricChartData>? _soilMoistureWeeklyReport;
            private List<WeeklyMetricChartData>? _lightIntensityWeeklyReport;

            private List<DailyMetricChartData>? _temperatureDailyReport;
            private List<DailyMetricChartData>? _airHumidityDailyReport;
            private List<DailyMetricChartData>? _soilMoistureDailyReport;
            private List<DailyMetricChartData>? _lightIntensityDailyReport;

            private bool IsInitialRender { get; set; }

            private Timer? _resizeTimer;

            public async void Created(Object args)
            {
                await Task.Yield();
                IsInitialRender = true;
            }

            protected override async Task OnInitializedAsync()
            {
                _latestMetric = await GreenhouseMetricService.GetLatestMetric();

                _temperatureWeeklyReport = await MetricChartDataService.GetHiLowDailyMetricChartData(g => g.Temperature);
                _airHumidityWeeklyReport = await MetricChartDataService.GetHiLowDailyMetricChartData(g => g.Humidity);
                _soilMoistureWeeklyReport = await MetricChartDataService.GetHiLowDailyMetricChartData(g => g.SoilMoisture);
                _lightIntensityWeeklyReport = await MetricChartDataService.GetHiLowDailyMetricChartData(g => g.LightIntensity);

                _temperatureDailyReport = await MetricChartDataService.GetDailyMetricChartData(g => g.Temperature);
                _airHumidityDailyReport = await MetricChartDataService.GetDailyMetricChartData(g => g.Humidity);
                _soilMoistureDailyReport = await MetricChartDataService.GetDailyMetricChartData(g => g.SoilMoisture);
                _lightIntensityDailyReport = await MetricChartDataService.GetDailyMetricChartData(g => g.LightIntensity);
            }

            protected override async Task OnAfterRenderAsync(bool firstRender)
            {
                if (firstRender)
                {
                    var result = await SessionStorage.GetAsync<bool>("time_range_daily");
                    _toggleMetricsTimeRangeWeekly = !result.Success || result.Value;
                }
            }


            private async Task ResizingWindow(ResizeArgs args)
            {
                if (_resizeTimer != null)
                {
                    _resizeTimer.Dispose();
                }

                _resizeTimer = new Timer(async _ => { await InvokeAsync(() => { RefreshComponents(); }); }, null, 500, Timeout.Infinite);
            }

            private async Task RefreshComponents()
            {
                await Task.Yield();
                if (_temperature != null) await _temperature.RefreshAsync();
                if (_humidity != null) await _humidity.RefreshAsync();
                if (_soilMoisture != null) await _soilMoisture.RefreshAsync();
                if (_lightIntensity != null) await _lightIntensity.RefreshAsync();
            }

            private void ChangeTimeInterval(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
            {
                SessionStorage.SetAsync("time_range_daily", args.Checked);
            }

            private void ReloadPage()
            {
                NavigationManager.NavigateTo("/", true);
            }
        }
    </Authorized>
    <NotAuthorized>
        <p><em>You are not authorized to view this page. Please login first...</em></p>
    </NotAuthorized>
</AuthorizeView>
