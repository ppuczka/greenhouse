@page "/"
@using Greenhouse.Config
@using Greenhouse.Data
@using Greenhouse.Data.Interfaces
@using Greenhouse.Data.Models
@using Microsoft.EntityFrameworkCore

@inject Microsoft.Extensions.Options.IOptions<Config> Config
@inject IDbContextFactory<MetricsContext> DbFactory
@inject IGreenhouseMetricService GreenhouseMetricService

<PageTitle>Dashboard</PageTitle>
@if (_metric == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Dashboard</h1>
    <br>
    <br/>
    <h4>Live metrics</h4>
    <h6>Last updated: <b>@_metric.DateTime</b></h6>
    <h6>Temperature: <b>@_metric.Temperature</b></h6>
    <h6>Humidity: <b>@_metric.Humidity</b></h6>
    <h6>Soil Moisture: <b>@_metric.SoilMoisture</b></h6>
}

@code

{
    private GreenhouseMetric? _metric;

    protected override async Task OnInitializedAsync()
    {
        _metric = await GreenhouseMetricService.GetLatestMetric();
    }
}
