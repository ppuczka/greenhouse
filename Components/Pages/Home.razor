@page "/"
@rendermode InteractiveServer
@attribute [Authorize]

@using Greenhouse.Data.Interfaces
@using Greenhouse.Data.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Syncfusion.Blazor.Layouts
@using Syncfusion.Blazor.CircularGauge
@using Syncfusion.Blazor.Charts

@inject IGreenhouseMetricService GreenhouseMetricService
@inject IMetricChartDataService MetricChartDataService

<PageTitle>Dashboard</PageTitle>
<AuthorizeView>
    <Authorized>
        @if (_latestMetric == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="content">
                <SfDashboardLayout CellSpacing="@(new double[] { 20, 20 })" Columns="3">
                    <DashboardLayoutEvents Created="Created" OnWindowResize="@ResizingWindow"
                                           Resizing="@ResizingWindow"></DashboardLayoutEvents>
                    <DashboardLayoutPanels>
                        <DashboardLayoutPanel Row="0">
                            <ContentTemplate>
                                @if (IsInitialRender)
                                {
                                    <SfCircularGauge ID="Temperature"
                                                     Title="Current Temperature"
                                                     @ref="_temperature"
                                                     Background="transparent"
                                                     Height="150%" Width="100%">
                                        <CircularGaugeAxes>
                                            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="10" Maximum="40">
                                                <CircularGaugeRanges>
                                                    <CircularGaugeRange Start=17
                                                                        End=25
                                                                        Color="Green"></CircularGaugeRange>
                                                    <CircularGaugeRange Start=0 End=17></CircularGaugeRange>
                                                    <CircularGaugeRange Start=25 End=40
                                                                        Color="Red"></CircularGaugeRange>
                                                </CircularGaugeRanges>
                                                <CircularGaugePointers>
                                                    <CircularGaugePointer
                                                        Value=@_latestMetric.Temperature></CircularGaugePointer>
                                                </CircularGaugePointers>
                                            </CircularGaugeAxis>
                                        </CircularGaugeAxes>
                                    </SfCircularGauge>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel SizeX=2 Column=2 Row="0">
                            <ContentTemplate>
                                <SfChart Title="Temperature Weekly" Palettes="@_palettes">
                                    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                    </ChartPrimaryXAxis>

                                    <ChartSeriesCollection>
                                        <ChartSeries DataSource="@_temperatureReport"
                                                     High="30"
                                                     XName="WeekDay"
                                                     YName="High"
                                                     Type="ChartSeriesType.Column">
                                            <ChartMarker>
                                                <ChartDataLabel Visible="true"/>
                                            </ChartMarker>
                                        </ChartSeries>
                                        <ChartSeries DataSource="@_temperatureReport"
                                                     XName="WeekDay"
                                                     YName="Low"
                                                     Type="ChartSeriesType.Column">
                                            <ChartMarker>
                                                <ChartDataLabel Visible="true"/>
                                            </ChartMarker>
                                        </ChartSeries>
                                    </ChartSeriesCollection>
                                </SfChart>
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel Row="1">
                            <ContentTemplate>
                                @if (IsInitialRender)
                                {
                                    <SfCircularGauge ID="Humidity"
                                                     Title="Current Humidity"
                                                     @ref="_humidity"
                                                     Background="transparent"
                                                     Height="150%"
                                                     Width="100%">
                                        <CircularGaugeAxes>
                                            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="20" Maximum="90">
                                                <CircularGaugeRanges>
                                                    <CircularGaugeRange Start=40 End=60
                                                                        Color="Green"></CircularGaugeRange>
                                                    <CircularGaugeRange Start=60 End=90></CircularGaugeRange>
                                                    <CircularGaugeRange Start=20 End=40
                                                                        Color="Red"></CircularGaugeRange>
                                                </CircularGaugeRanges>
                                                <CircularGaugePointers>
                                                    <CircularGaugePointer
                                                        Value=@_latestMetric.Humidity></CircularGaugePointer>
                                                </CircularGaugePointers>
                                            </CircularGaugeAxis>
                                        </CircularGaugeAxes>
                                    </SfCircularGauge>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel SizeX=2 Column=2 Row="1">
                            <ContentTemplate>
                                <SfChart Title="Air Humidity Weekly" Palettes="@_palettes">
                                    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                    </ChartPrimaryXAxis>

                                    <ChartSeriesCollection>
                                        <ChartSeries DataSource="@_airHumidityReport"
                                                     XName="WeekDay"
                                                     YName="High"
                                                     Type="ChartSeriesType.Column">
                                            <ChartMarker>
                                                <ChartDataLabel Visible="true"/>
                                            </ChartMarker>
                                        </ChartSeries>
                                        <ChartSeries DataSource="@_airHumidityReport"
                                                     XName="WeekDay"
                                                     YName="Low"
                                                     Type="ChartSeriesType.Column">
                                            <ChartMarker>
                                                <ChartDataLabel Visible="true"/>
                                            </ChartMarker>
                                        </ChartSeries>
                                    </ChartSeriesCollection>
                                </SfChart>
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel Row=2>
                            <ContentTemplate>
                                @if (IsInitialRender)
                                {
                                    <SfCircularGauge ID="SoilMoisture"
                                                     @ref="_soilMoisture"
                                                     Title="Current Soil Moisture"
                                                     Background="transparent"
                                                     Height="150%"
                                                     Width="100%">
                                        <CircularGaugeAxes>
                                            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="20" Maximum="90">
                                                <CircularGaugeRanges>
                                                    <CircularGaugeRange Start=40 End=60
                                                                        Color="Green"></CircularGaugeRange>
                                                    <CircularGaugeRange Start=60 End=90></CircularGaugeRange>
                                                    <CircularGaugeRange Start=20 End=40
                                                                        Color="Red"></CircularGaugeRange>
                                                </CircularGaugeRanges>
                                                <CircularGaugePointers>
                                                    <CircularGaugePointer Value=@_latestMetric.SoilMoisture></CircularGaugePointer>
                                                </CircularGaugePointers>
                                            </CircularGaugeAxis>
                                        </CircularGaugeAxes>
                                    </SfCircularGauge>
                                }
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                        <DashboardLayoutPanel SizeX=2 Column=2 Row="2">
                            <ContentTemplate>
                                <SfChart Title="Soil Moisture Weekly" Palettes="@_palettes">
                                    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                    </ChartPrimaryXAxis>

                                    <ChartSeriesCollection>
                                        <ChartSeries DataSource="@_soilMoistureReport"
                                                     XName="WeekDay"
                                                     YName="High"
                                                     Type="ChartSeriesType.Column">
                                            <ChartMarker>
                                                <ChartDataLabel Visible="true"/>
                                            </ChartMarker>
                                        </ChartSeries>
                                        <ChartSeries DataSource="@_soilMoistureReport"
                                                     XName="WeekDay"
                                                     YName="Low"
                                                     Type="ChartSeriesType.Column">
                                            <ChartMarker>
                                                <ChartDataLabel Visible="true"/>
                                            </ChartMarker>
                                        </ChartSeries>
                                    </ChartSeriesCollection>
                                </SfChart>
                            </ContentTemplate>
                        </DashboardLayoutPanel>
                    </DashboardLayoutPanels>
                </SfDashboardLayout>
                <p>Last updated: @_latestMetric.DateTime</p>
            </div>
        }

        @code
        
        {

            private readonly string[] _palettes = ["#F6B53F", "#6FAAB0"];

            private SfCircularGauge? _temperature;
            private SfCircularGauge? _humidity;
            private SfCircularGauge? _soilMoisture;
            
            private GreenhouseMetric? _latestMetric;
            private int _lightIntensityValue = -1;
                
            private List<MetricChartData>? _temperatureReport;
            private List<MetricChartData>? _airHumidityReport;
            private List<MetricChartData>? _soilMoistureReport;

            private bool IsInitialRender { get; set; }

            private Timer? _resizeTimer;

            public async void Created(Object args)
            {
                await Task.Yield();
                IsInitialRender = true;
            }

            protected override async Task OnInitializedAsync()
            {
                _latestMetric = await GreenhouseMetricService.GetLatestMetric();
                if (_latestMetric.LightIntensity != null)
                {
                    _lightIntensityValue = _latestMetric.LightIntensity ?? default(int);
                }

                _temperatureReport = await MetricChartDataService.GetHiLowDailyMetricChartData(g => g.Temperature);
                _airHumidityReport = await MetricChartDataService.GetHiLowDailyMetricChartData(g => g.Humidity);
                _soilMoistureReport = await MetricChartDataService.GetHiLowDailyMetricChartData(g => g.SoilMoisture);
            }

            private async Task ResizingWindow(ResizeArgs args)
            {
                if (_resizeTimer != null)
                {
                    _resizeTimer.Dispose();
                }

                _resizeTimer = new Timer(async _ => { await InvokeAsync(() => { RefreshComponents(); }); }, null, 500, Timeout.Infinite);
            }

            private async Task RefreshComponents()
            {
                await Task.Yield();
                if (_temperature != null) await _temperature.RefreshAsync();
                if (_humidity != null) await _humidity.RefreshAsync();
                if (_soilMoisture != null) await _soilMoisture.RefreshAsync();
            }
        }
    </Authorized>
    <NotAuthorized>
        <p><em>You are not authorized to view this page. Please login first...</em></p>
    </NotAuthorized>
</AuthorizeView>
